   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"misc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	NVIC_PriorityGroupConfig
  20              		.thumb
  21              		.thumb_func
  23              	NVIC_PriorityGroupConfig:
  24              	.LFB29:
  25              		.file 1 "../src/misc.c"
   1:../src/misc.c **** /**
   2:../src/misc.c ****   ******************************************************************************
   3:../src/misc.c ****   * @file    misc.c
   4:../src/misc.c ****   * @author  MCD Application Team
   5:../src/misc.c ****   * @version V3.5.0
   6:../src/misc.c ****   * @date    11-March-2011
   7:../src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:../src/misc.c ****   *          to CMSIS functions).
   9:../src/misc.c ****   ******************************************************************************
  10:../src/misc.c ****   * @attention
  11:../src/misc.c ****   *
  12:../src/misc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  13:../src/misc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  14:../src/misc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  15:../src/misc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  16:../src/misc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  17:../src/misc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  18:../src/misc.c ****   *
  19:../src/misc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  20:../src/misc.c ****   ******************************************************************************
  21:../src/misc.c ****   */
  22:../src/misc.c **** 
  23:../src/misc.c **** /* Includes ------------------------------------------------------------------*/
  24:../src/misc.c **** #include "misc.h"
  25:../src/misc.c **** #include "stm32f10x_conf.h"
  26:../src/misc.c **** 
  27:../src/misc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  28:../src/misc.c ****   * @{
  29:../src/misc.c ****   */
  30:../src/misc.c **** 
  31:../src/misc.c **** /** @defgroup MISC 
  32:../src/misc.c ****   * @brief MISC driver modules
  33:../src/misc.c ****   * @{
  34:../src/misc.c ****   */
  35:../src/misc.c **** 
  36:../src/misc.c **** /** @defgroup MISC_Private_TypesDefinitions
  37:../src/misc.c ****   * @{
  38:../src/misc.c ****   */
  39:../src/misc.c **** 
  40:../src/misc.c **** /**
  41:../src/misc.c ****   * @}
  42:../src/misc.c ****   */ 
  43:../src/misc.c **** 
  44:../src/misc.c **** /** @defgroup MISC_Private_Defines
  45:../src/misc.c ****   * @{
  46:../src/misc.c ****   */
  47:../src/misc.c **** 
  48:../src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  49:../src/misc.c **** /**
  50:../src/misc.c ****   * @}
  51:../src/misc.c ****   */
  52:../src/misc.c **** 
  53:../src/misc.c **** /** @defgroup MISC_Private_Macros
  54:../src/misc.c ****   * @{
  55:../src/misc.c ****   */
  56:../src/misc.c **** 
  57:../src/misc.c **** /**
  58:../src/misc.c ****   * @}
  59:../src/misc.c ****   */
  60:../src/misc.c **** 
  61:../src/misc.c **** /** @defgroup MISC_Private_Variables
  62:../src/misc.c ****   * @{
  63:../src/misc.c ****   */
  64:../src/misc.c **** 
  65:../src/misc.c **** /**
  66:../src/misc.c ****   * @}
  67:../src/misc.c ****   */
  68:../src/misc.c **** 
  69:../src/misc.c **** /** @defgroup MISC_Private_FunctionPrototypes
  70:../src/misc.c ****   * @{
  71:../src/misc.c ****   */
  72:../src/misc.c **** 
  73:../src/misc.c **** /**
  74:../src/misc.c ****   * @}
  75:../src/misc.c ****   */
  76:../src/misc.c **** 
  77:../src/misc.c **** /** @defgroup MISC_Private_Functions
  78:../src/misc.c ****   * @{
  79:../src/misc.c ****   */
  80:../src/misc.c **** 
  81:../src/misc.c **** /**
  82:../src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
  83:../src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
  84:../src/misc.c ****   *   This parameter can be one of the following values:
  85:../src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
  86:../src/misc.c ****   *                                4 bits for subpriority
  87:../src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
  88:../src/misc.c ****   *                                3 bits for subpriority
  89:../src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
  90:../src/misc.c ****   *                                2 bits for subpriority
  91:../src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
  92:../src/misc.c ****   *                                1 bits for subpriority
  93:../src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
  94:../src/misc.c ****   *                                0 bits for subpriority
  95:../src/misc.c ****   * @retval None
  96:../src/misc.c ****   */
  97:../src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
  98:../src/misc.c **** {
  26              		.loc 1 98 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  99:../src/misc.c ****   /* Check the parameters */
 100:../src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 101:../src/misc.c ****   
 102:../src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 103:../src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  42              		.loc 1 103 0
  43 0008 4FF46D43 		mov	r3, #60672
  44 000c CEF20003 		movt	r3, 57344
  45 0010 7A68     		ldr	r2, [r7, #4]
  46 0012 42F0BE62 		orr	r2, r2, #99614720
  47 0016 42F42022 		orr	r2, r2, #655360
  48 001a DA60     		str	r2, [r3, #12]
 104:../src/misc.c **** }
  49              		.loc 1 104 0
  50 001c 07F10C07 		add	r7, r7, #12
  51 0020 BD46     		mov	sp, r7
  52 0022 80BC     		pop	{r7}
  53 0024 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE29:
  57 0026 00BF     		.align	2
  58              		.global	NVIC_Init
  59              		.thumb
  60              		.thumb_func
  62              	NVIC_Init:
  63              	.LFB30:
 105:../src/misc.c **** 
 106:../src/misc.c **** /**
 107:../src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 108:../src/misc.c ****   *         parameters in the NVIC_InitStruct.
 109:../src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 110:../src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 111:../src/misc.c ****   * @retval None
 112:../src/misc.c ****   */
 113:../src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 114:../src/misc.c **** {
  64              		.loc 1 114 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 24
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69 0028 80B4     		push	{r7}
  70              	.LCFI3:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 7, -4
  73 002a 87B0     		sub	sp, sp, #28
  74              	.LCFI4:
  75              		.cfi_def_cfa_offset 32
  76 002c 00AF     		add	r7, sp, #0
  77              	.LCFI5:
  78              		.cfi_def_cfa_register 7
  79 002e 7860     		str	r0, [r7, #4]
 115:../src/misc.c ****   uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
  80              		.loc 1 115 0
  81 0030 4FF00003 		mov	r3, #0
  82 0034 7B61     		str	r3, [r7, #20]
  83 0036 4FF00003 		mov	r3, #0
  84 003a 3B61     		str	r3, [r7, #16]
  85 003c 4FF00F03 		mov	r3, #15
  86 0040 FB60     		str	r3, [r7, #12]
 116:../src/misc.c ****   
 117:../src/misc.c ****   /* Check the parameters */
 118:../src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 119:../src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 120:../src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 121:../src/misc.c ****     
 122:../src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  87              		.loc 1 122 0
  88 0042 7B68     		ldr	r3, [r7, #4]
  89 0044 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
  90 0046 002B     		cmp	r3, #0
  91 0048 47D0     		beq	.L3
 123:../src/misc.c ****   {
 124:../src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 125:../src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  92              		.loc 1 125 0
  93 004a 4FF46D43 		mov	r3, #60672
  94 004e CEF20003 		movt	r3, 57344
  95 0052 DB68     		ldr	r3, [r3, #12]
  96 0054 6FEA0303 		mvn	r3, r3
  97 0058 03F4E063 		and	r3, r3, #1792
  98 005c 4FEA1323 		lsr	r3, r3, #8
  99 0060 7B61     		str	r3, [r7, #20]
 126:../src/misc.c ****     tmppre = (0x4 - tmppriority);
 100              		.loc 1 126 0
 101 0062 7B69     		ldr	r3, [r7, #20]
 102 0064 C3F10403 		rsb	r3, r3, #4
 103 0068 3B61     		str	r3, [r7, #16]
 127:../src/misc.c ****     tmpsub = tmpsub >> tmppriority;
 104              		.loc 1 127 0
 105 006a 7B69     		ldr	r3, [r7, #20]
 106 006c FA68     		ldr	r2, [r7, #12]
 107 006e 22FA03F3 		lsr	r3, r2, r3
 108 0072 FB60     		str	r3, [r7, #12]
 128:../src/misc.c **** 
 129:../src/misc.c ****     tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 109              		.loc 1 129 0
 110 0074 7B68     		ldr	r3, [r7, #4]
 111 0076 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 112 0078 1A46     		mov	r2, r3
 113 007a 3B69     		ldr	r3, [r7, #16]
 114 007c 02FA03F3 		lsl	r3, r2, r3
 115 0080 7B61     		str	r3, [r7, #20]
 130:../src/misc.c ****     tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
 116              		.loc 1 130 0
 117 0082 7B68     		ldr	r3, [r7, #4]
 118 0084 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 119 0086 1A46     		mov	r2, r3
 120 0088 FB68     		ldr	r3, [r7, #12]
 121 008a 1340     		ands	r3, r3, r2
 122 008c 7A69     		ldr	r2, [r7, #20]
 123 008e 1343     		orrs	r3, r3, r2
 124 0090 7B61     		str	r3, [r7, #20]
 131:../src/misc.c ****     tmppriority = tmppriority << 0x04;
 125              		.loc 1 131 0
 126 0092 7B69     		ldr	r3, [r7, #20]
 127 0094 4FEA0313 		lsl	r3, r3, #4
 128 0098 7B61     		str	r3, [r7, #20]
 132:../src/misc.c ****         
 133:../src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 129              		.loc 1 133 0
 130 009a 4FF46143 		mov	r3, #57600
 131 009e CEF20003 		movt	r3, 57344
 132 00a2 7A68     		ldr	r2, [r7, #4]
 133 00a4 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 134 00a6 1146     		mov	r1, r2
 135 00a8 7A69     		ldr	r2, [r7, #20]
 136 00aa D2B2     		uxtb	r2, r2
 137 00ac 5B18     		adds	r3, r3, r1
 138 00ae 83F80023 		strb	r2, [r3, #768]
 134:../src/misc.c ****     
 135:../src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 136:../src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 139              		.loc 1 136 0
 140 00b2 4FF46143 		mov	r3, #57600
 141 00b6 CEF20003 		movt	r3, 57344
 142 00ba 7A68     		ldr	r2, [r7, #4]
 143 00bc 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 144 00be 4FEA5212 		lsr	r2, r2, #5
 145 00c2 D2B2     		uxtb	r2, r2
 137:../src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 146              		.loc 1 137 0
 147 00c4 7968     		ldr	r1, [r7, #4]
 148 00c6 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 149 00c8 01F01F01 		and	r1, r1, #31
 150 00cc 4FF00100 		mov	r0, #1
 151 00d0 00FA01F1 		lsl	r1, r0, r1
 136:../src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 152              		.loc 1 136 0
 153 00d4 43F82210 		str	r1, [r3, r2, lsl #2]
 154 00d8 14E0     		b	.L2
 155              	.L3:
 138:../src/misc.c ****   }
 139:../src/misc.c ****   else
 140:../src/misc.c ****   {
 141:../src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 142:../src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 156              		.loc 1 142 0
 157 00da 4FF46143 		mov	r3, #57600
 158 00de CEF20003 		movt	r3, 57344
 159 00e2 7A68     		ldr	r2, [r7, #4]
 160 00e4 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 161 00e6 4FEA5212 		lsr	r2, r2, #5
 162 00ea D2B2     		uxtb	r2, r2
 143:../src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 163              		.loc 1 143 0
 164 00ec 7968     		ldr	r1, [r7, #4]
 165 00ee 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 166 00f0 01F01F01 		and	r1, r1, #31
 167 00f4 4FF00100 		mov	r0, #1
 168 00f8 00FA01F1 		lsl	r1, r0, r1
 142:../src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 169              		.loc 1 142 0
 170 00fc 02F12002 		add	r2, r2, #32
 171 0100 43F82210 		str	r1, [r3, r2, lsl #2]
 172              	.L2:
 144:../src/misc.c ****   }
 145:../src/misc.c **** }
 173              		.loc 1 145 0
 174 0104 07F11C07 		add	r7, r7, #28
 175 0108 BD46     		mov	sp, r7
 176 010a 80BC     		pop	{r7}
 177 010c 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE30:
 181 010e 00BF     		.align	2
 182              		.global	NVIC_SetVectorTable
 183              		.thumb
 184              		.thumb_func
 186              	NVIC_SetVectorTable:
 187              	.LFB31:
 146:../src/misc.c **** 
 147:../src/misc.c **** /**
 148:../src/misc.c ****   * @brief  Sets the vector table location and Offset.
 149:../src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 150:../src/misc.c ****   *   This parameter can be one of the following values:
 151:../src/misc.c ****   *     @arg NVIC_VectTab_RAM
 152:../src/misc.c ****   *     @arg NVIC_VectTab_FLASH
 153:../src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple 
 154:../src/misc.c ****   *         of 0x200.
 155:../src/misc.c ****   * @retval None
 156:../src/misc.c ****   */
 157:../src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 158:../src/misc.c **** { 
 188              		.loc 1 158 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193 0110 80B4     		push	{r7}
 194              	.LCFI6:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 7, -4
 197 0112 83B0     		sub	sp, sp, #12
 198              	.LCFI7:
 199              		.cfi_def_cfa_offset 16
 200 0114 00AF     		add	r7, sp, #0
 201              	.LCFI8:
 202              		.cfi_def_cfa_register 7
 203 0116 7860     		str	r0, [r7, #4]
 204 0118 3960     		str	r1, [r7, #0]
 159:../src/misc.c ****   /* Check the parameters */
 160:../src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 161:../src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 162:../src/misc.c ****    
 163:../src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 205              		.loc 1 163 0
 206 011a 4FF46D43 		mov	r3, #60672
 207 011e CEF20003 		movt	r3, 57344
 208 0122 3A68     		ldr	r2, [r7, #0]
 209 0124 22F06042 		bic	r2, r2, #-536870912
 210 0128 22F07F02 		bic	r2, r2, #127
 211 012c 7968     		ldr	r1, [r7, #4]
 212 012e 0A43     		orrs	r2, r2, r1
 213 0130 9A60     		str	r2, [r3, #8]
 164:../src/misc.c **** }
 214              		.loc 1 164 0
 215 0132 07F10C07 		add	r7, r7, #12
 216 0136 BD46     		mov	sp, r7
 217 0138 80BC     		pop	{r7}
 218 013a 7047     		bx	lr
 219              		.cfi_endproc
 220              	.LFE31:
 222              		.align	2
 223              		.global	NVIC_SystemLPConfig
 224              		.thumb
 225              		.thumb_func
 227              	NVIC_SystemLPConfig:
 228              	.LFB32:
 165:../src/misc.c **** 
 166:../src/misc.c **** /**
 167:../src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 168:../src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 169:../src/misc.c ****   *   This parameter can be one of the following values:
 170:../src/misc.c ****   *     @arg NVIC_LP_SEVONPEND
 171:../src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP
 172:../src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT
 173:../src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 174:../src/misc.c ****   * @retval None
 175:../src/misc.c ****   */
 176:../src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 177:../src/misc.c **** {
 229              		.loc 1 177 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 8
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234 013c 80B4     		push	{r7}
 235              	.LCFI9:
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 013e 83B0     		sub	sp, sp, #12
 239              	.LCFI10:
 240              		.cfi_def_cfa_offset 16
 241 0140 00AF     		add	r7, sp, #0
 242              	.LCFI11:
 243              		.cfi_def_cfa_register 7
 244 0142 0246     		mov	r2, r0
 245 0144 0B46     		mov	r3, r1
 246 0146 FA71     		strb	r2, [r7, #7]
 247 0148 BB71     		strb	r3, [r7, #6]
 178:../src/misc.c ****   /* Check the parameters */
 179:../src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 180:../src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 181:../src/misc.c ****   
 182:../src/misc.c ****   if (NewState != DISABLE)
 248              		.loc 1 182 0
 249 014a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 250 014c 002B     		cmp	r3, #0
 251 014e 0DD0     		beq	.L7
 183:../src/misc.c ****   {
 184:../src/misc.c ****     SCB->SCR |= LowPowerMode;
 252              		.loc 1 184 0
 253 0150 4FF46D43 		mov	r3, #60672
 254 0154 CEF20003 		movt	r3, 57344
 255 0158 4FF46D42 		mov	r2, #60672
 256 015c CEF20002 		movt	r2, 57344
 257 0160 1269     		ldr	r2, [r2, #16]
 258 0162 1146     		mov	r1, r2
 259 0164 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 260 0166 0A43     		orrs	r2, r2, r1
 261 0168 1A61     		str	r2, [r3, #16]
 262 016a 0EE0     		b	.L6
 263              	.L7:
 185:../src/misc.c ****   }
 186:../src/misc.c ****   else
 187:../src/misc.c ****   {
 188:../src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 264              		.loc 1 188 0
 265 016c 4FF46D43 		mov	r3, #60672
 266 0170 CEF20003 		movt	r3, 57344
 267 0174 4FF46D42 		mov	r2, #60672
 268 0178 CEF20002 		movt	r2, 57344
 269 017c 1269     		ldr	r2, [r2, #16]
 270 017e 1146     		mov	r1, r2
 271 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 272 0182 6FEA0202 		mvn	r2, r2
 273 0186 0A40     		ands	r2, r2, r1
 274 0188 1A61     		str	r2, [r3, #16]
 275              	.L6:
 189:../src/misc.c ****   }
 190:../src/misc.c **** }
 276              		.loc 1 190 0
 277 018a 07F10C07 		add	r7, r7, #12
 278 018e BD46     		mov	sp, r7
 279 0190 80BC     		pop	{r7}
 280 0192 7047     		bx	lr
 281              		.cfi_endproc
 282              	.LFE32:
 284              		.align	2
 285              		.global	SysTick_CLKSourceConfig
 286              		.thumb
 287              		.thumb_func
 289              	SysTick_CLKSourceConfig:
 290              	.LFB33:
 191:../src/misc.c **** 
 192:../src/misc.c **** /**
 193:../src/misc.c ****   * @brief  Configures the SysTick clock source.
 194:../src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 195:../src/misc.c ****   *   This parameter can be one of the following values:
 196:../src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 197:../src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 198:../src/misc.c ****   * @retval None
 199:../src/misc.c ****   */
 200:../src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 201:../src/misc.c **** {
 291              		.loc 1 201 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 8
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296 0194 80B4     		push	{r7}
 297              	.LCFI12:
 298              		.cfi_def_cfa_offset 4
 299              		.cfi_offset 7, -4
 300 0196 83B0     		sub	sp, sp, #12
 301              	.LCFI13:
 302              		.cfi_def_cfa_offset 16
 303 0198 00AF     		add	r7, sp, #0
 304              	.LCFI14:
 305              		.cfi_def_cfa_register 7
 306 019a 7860     		str	r0, [r7, #4]
 202:../src/misc.c ****   /* Check the parameters */
 203:../src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 204:../src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 307              		.loc 1 204 0
 308 019c 7B68     		ldr	r3, [r7, #4]
 309 019e 042B     		cmp	r3, #4
 310 01a0 0CD1     		bne	.L10
 205:../src/misc.c ****   {
 206:../src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 311              		.loc 1 206 0
 312 01a2 4EF21003 		movw	r3, #57360
 313 01a6 CEF20003 		movt	r3, 57344
 314 01aa 4EF21002 		movw	r2, #57360
 315 01ae CEF20002 		movt	r2, 57344
 316 01b2 1268     		ldr	r2, [r2, #0]
 317 01b4 42F00402 		orr	r2, r2, #4
 318 01b8 1A60     		str	r2, [r3, #0]
 319 01ba 0BE0     		b	.L9
 320              	.L10:
 207:../src/misc.c ****   }
 208:../src/misc.c ****   else
 209:../src/misc.c ****   {
 210:../src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 321              		.loc 1 210 0
 322 01bc 4EF21003 		movw	r3, #57360
 323 01c0 CEF20003 		movt	r3, 57344
 324 01c4 4EF21002 		movw	r2, #57360
 325 01c8 CEF20002 		movt	r2, 57344
 326 01cc 1268     		ldr	r2, [r2, #0]
 327 01ce 22F00402 		bic	r2, r2, #4
 328 01d2 1A60     		str	r2, [r3, #0]
 329              	.L9:
 211:../src/misc.c ****   }
 212:../src/misc.c **** }
 330              		.loc 1 212 0
 331 01d4 07F10C07 		add	r7, r7, #12
 332 01d8 BD46     		mov	sp, r7
 333 01da 80BC     		pop	{r7}
 334 01dc 7047     		bx	lr
 335              		.cfi_endproc
 336              	.LFE33:
 338              	.Letext0:
 339              		.file 2 "/home/jachu/elektronika/STM32/gcc-arm-none-eabi-4_6-2012q4/bin/../lib/gcc/arm-none-eabi/4
 340              		.file 3 "/home/jachu/elektronika/STM32/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/CMSIS/CM3/CoreSupp
 341              		.file 4 "/home/jachu/workspaceSTM/Sumo_STM/src/stm32f10x.h"
 342              		.file 5 "/home/jachu/elektronika/STM32/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/STM32F10x_StdPerip
DEFINED SYMBOLS
                            *ABS*:00000000 misc.c
     /tmp/ccP9PczV.s:18     .text:00000000 $t
     /tmp/ccP9PczV.s:23     .text:00000000 NVIC_PriorityGroupConfig
     /tmp/ccP9PczV.s:62     .text:00000028 NVIC_Init
     /tmp/ccP9PczV.s:186    .text:00000110 NVIC_SetVectorTable
     /tmp/ccP9PczV.s:227    .text:0000013c NVIC_SystemLPConfig
     /tmp/ccP9PczV.s:289    .text:00000194 SysTick_CLKSourceConfig
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
