   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._Z5delayi,"ax",%progbits
  19              		.align	2
  20              		.global	_Z5delayi
  21              		.thumb
  22              		.thumb_func
  24              	_Z5delayi:
  25              	.LFB31:
  26              		.file 1 "../src/main.cpp"
   1:../src/main.cpp **** /*******************************************************************************
   2:../src/main.cpp ****  *
   3:../src/main.cpp ****  * Copyright (C) 2012 Jorge Aparicio <jorge.aparicio.r@gmail.com>
   4:../src/main.cpp ****  *
   5:../src/main.cpp ****  * This file is part of bareCortexM.
   6:../src/main.cpp ****  *
   7:../src/main.cpp ****  * bareCortexM is free software: you can redistribute it and/or modify it under
   8:../src/main.cpp ****  * the terms of the GNU General Public License as published by the Free
   9:../src/main.cpp ****  * Software Foundation, either version 3 of the License, or (at your option)
  10:../src/main.cpp ****  * any later version.
  11:../src/main.cpp ****  *
  12:../src/main.cpp ****  * bareCortexM is distributed in the hope that it will be useful, but WITHOUT
  13:../src/main.cpp ****  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  14:../src/main.cpp ****  * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
  15:../src/main.cpp ****  * more details.
  16:../src/main.cpp ****  *
  17:../src/main.cpp ****  * You should have received a copy of the GNU General Public License along
  18:../src/main.cpp ****  * with bareCortexM. If not, see <http://www.gnu.org/licenses/>.
  19:../src/main.cpp ****  *
  20:../src/main.cpp ****  ******************************************************************************/
  21:../src/main.cpp **** 
  22:../src/main.cpp **** #include <stm32f10x.h>
  23:../src/main.cpp **** #include <stm32f10x_conf.h>
  24:../src/main.cpp **** #include <stm32f10x_gpio.h>
  25:../src/main.cpp **** #include <stm32f10x_usart.h>
  26:../src/main.cpp **** #include "led.h"
  27:../src/main.cpp **** #include "sys.h"
  28:../src/main.cpp **** #include "motor.h"
  29:../src/main.cpp **** #include "lcd.h"
  30:../src/main.cpp **** 
  31:../src/main.cpp **** void delay(int del){
  27              		.loc 1 31 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  32:../src/main.cpp **** 	while(del > 0){
  43              		.loc 1 32 0
  44 0008 03E0     		b	.L2
  45              	.L3:
  33:../src/main.cpp **** 		del--;
  46              		.loc 1 33 0
  47 000a 7B68     		ldr	r3, [r7, #4]
  48 000c 03F1FF33 		add	r3, r3, #-1
  49 0010 7B60     		str	r3, [r7, #4]
  50              	.L2:
  32:../src/main.cpp **** 	while(del > 0){
  51              		.loc 1 32 0 discriminator 1
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 002B     		cmp	r3, #0
  54 0016 D4BF     		ite	le
  55 0018 0023     		movle	r3, #0
  56 001a 0123     		movgt	r3, #1
  57 001c DBB2     		uxtb	r3, r3
  58 001e 002B     		cmp	r3, #0
  59 0020 F3D1     		bne	.L3
  34:../src/main.cpp **** 	}
  35:../src/main.cpp **** }
  60              		.loc 1 35 0
  61 0022 07F10C07 		add	r7, r7, #12
  62 0026 BD46     		mov	sp, r7
  63 0028 80BC     		pop	{r7}
  64 002a 7047     		bx	lr
  65              		.cfi_endproc
  66              	.LFE31:
  68              		.section	.rodata
  69              		.align	2
  70              	.LC0:
  71 0000 456E636F 		.ascii	"Encoder: \000"
  71      6465723A 
  71      2000
  72 000a 0000     		.align	2
  73              	.LC1:
  74 000c 2C205449 		.ascii	", TIM1: \000"
  74      4D313A20 
  74      00
  75 0015 000000   		.section	.text.main,"ax",%progbits
  76              		.align	2
  77              		.global	main
  78              		.thumb
  79              		.thumb_func
  81              	main:
  82              	.LFB32:
  36:../src/main.cpp **** 
  37:../src/main.cpp **** int main()
  38:../src/main.cpp **** {
  83              		.loc 1 38 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 24
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 80B5     		push	{r7, lr}
  88              	.LCFI3:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 14, -4
  91              		.cfi_offset 7, -8
  92 0002 86B0     		sub	sp, sp, #24
  93              	.LCFI4:
  94              		.cfi_def_cfa_offset 32
  95 0004 00AF     		add	r7, sp, #0
  96              	.LCFI5:
  97              		.cfi_def_cfa_register 7
  98              	.LBB2:
  39:../src/main.cpp **** 	//sysInit();
  40:../src/main.cpp **** 	//motorRunVel();
  41:../src/main.cpp **** 	sysInit();
  99              		.loc 1 41 0
 100 0006 FFF7FEFF 		bl	_Z7sysInitv
  42:../src/main.cpp **** 	motorSetVel(-200, Right);
 101              		.loc 1 42 0
 102 000a 3248     		ldr	r0, .L6	@ float
 103 000c 4FF00101 		mov	r1, #1
 104 0010 FFF7FEFF 		bl	_Z11motorSetVelf5Motor
  43:../src/main.cpp **** 	motorRunVel(Right);
 105              		.loc 1 43 0
 106 0014 4FF00100 		mov	r0, #1
 107 0018 FFF7FEFF 		bl	_Z11motorRunVel5Motor
 108              	.L5:
 109              	.LBB3:
  44:../src/main.cpp **** 	while(true){
  45:../src/main.cpp **** 		//ctrlCheckAndExec();
  46:../src/main.cpp **** 		ledToggle(LED1 | LED2 | LED3 | LED4);
 110              		.loc 1 46 0 discriminator 1
 111 001c 4FF47060 		mov	r0, #3840
 112 0020 FFF7FEFF 		bl	_Z9ledTogglet
  47:../src/main.cpp **** 		sysDelayMs(500);
 113              		.loc 1 47 0 discriminator 1
 114 0024 4FF4FA70 		mov	r0, #500
 115 0028 FFF7FEFF 		bl	_Z10sysDelayMsj
  48:../src/main.cpp **** 		LcdClear();
 116              		.loc 1 48 0 discriminator 1
 117 002c FFF7FEFF 		bl	_Z8LcdClearv
  49:../src/main.cpp **** 		LcdGotoXYFont(1, 1);
 118              		.loc 1 49 0 discriminator 1
 119 0030 4FF00100 		mov	r0, #1
 120 0034 4FF00101 		mov	r1, #1
 121 0038 FFF7FEFF 		bl	_Z13LcdGotoXYFonthh
  50:../src/main.cpp **** 		LcdStr(FONT_1X, (const unsigned char*)"Encoder: ");
 122              		.loc 1 50 0 discriminator 1
 123 003c 4FF00100 		mov	r0, #1
 124 0040 40F20001 		movw	r1, #:lower16:.LC0
 125 0044 C0F20001 		movt	r1, #:upper16:.LC0
 126 0048 FFF7FEFF 		bl	_Z6LcdStr11LcdFontSizePKh
  51:../src/main.cpp **** 		unsigned char buffer[20];
  52:../src/main.cpp **** 		uint8_t cnt = uitoa(motorReadEnc(Right), (char*)buffer, 10);
 127              		.loc 1 52 0 discriminator 1
 128 004c 4FF00100 		mov	r0, #1
 129 0050 FFF7FEFF 		bl	_Z12motorReadEnc5Motor
 130 0054 0346     		mov	r3, r0
 131 0056 1A46     		mov	r2, r3
 132 0058 3B46     		mov	r3, r7
 133 005a 1046     		mov	r0, r2
 134 005c 1946     		mov	r1, r3
 135 005e 4FF00A02 		mov	r2, #10
 136 0062 FFF7FEFF 		bl	_Z5uitoamPch
 137 0066 0346     		mov	r3, r0
 138 0068 FB75     		strb	r3, [r7, #23]
  53:../src/main.cpp **** 		buffer[cnt] = 0;
 139              		.loc 1 53 0 discriminator 1
 140 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 141 006c 07F11802 		add	r2, r7, #24
 142 0070 D318     		adds	r3, r2, r3
 143 0072 4FF00002 		mov	r2, #0
 144 0076 03F8182C 		strb	r2, [r3, #-24]
  54:../src/main.cpp **** 		LcdStr(FONT_1X, buffer);
 145              		.loc 1 54 0 discriminator 1
 146 007a 3B46     		mov	r3, r7
 147 007c 4FF00100 		mov	r0, #1
 148 0080 1946     		mov	r1, r3
 149 0082 FFF7FEFF 		bl	_Z6LcdStr11LcdFontSizePKh
  55:../src/main.cpp **** 		LcdStr(FONT_1X, (const unsigned char*)", TIM1: ");
 150              		.loc 1 55 0 discriminator 1
 151 0086 4FF00100 		mov	r0, #1
 152 008a 40F20001 		movw	r1, #:lower16:.LC1
 153 008e C0F20001 		movt	r1, #:upper16:.LC1
 154 0092 FFF7FEFF 		bl	_Z6LcdStr11LcdFontSizePKh
  56:../src/main.cpp **** 		cnt = uitoa(motor_width[Right], (char*)buffer, 10);
 155              		.loc 1 56 0 discriminator 1
 156 0096 40F20003 		movw	r3, #:lower16:motor_width
 157 009a C0F20003 		movt	r3, #:upper16:motor_width
 158 009e 5B68     		ldr	r3, [r3, #4]
 159 00a0 1A46     		mov	r2, r3
 160 00a2 3B46     		mov	r3, r7
 161 00a4 1046     		mov	r0, r2
 162 00a6 1946     		mov	r1, r3
 163 00a8 4FF00A02 		mov	r2, #10
 164 00ac FFF7FEFF 		bl	_Z5uitoamPch
 165 00b0 0346     		mov	r3, r0
 166 00b2 FB75     		strb	r3, [r7, #23]
  57:../src/main.cpp **** 		buffer[cnt] = 0;
 167              		.loc 1 57 0 discriminator 1
 168 00b4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 169 00b6 07F11802 		add	r2, r7, #24
 170 00ba D318     		adds	r3, r2, r3
 171 00bc 4FF00002 		mov	r2, #0
 172 00c0 03F8182C 		strb	r2, [r3, #-24]
  58:../src/main.cpp **** 		LcdStr(FONT_1X, buffer);
 173              		.loc 1 58 0 discriminator 1
 174 00c4 3B46     		mov	r3, r7
 175 00c6 4FF00100 		mov	r0, #1
 176 00ca 1946     		mov	r1, r3
 177 00cc FFF7FEFF 		bl	_Z6LcdStr11LcdFontSizePKh
 178              	.LBE3:
  44:../src/main.cpp **** 	while(true){
 179              		.loc 1 44 0 discriminator 1
 180 00d0 A4E7     		b	.L5
 181              	.L7:
 182 00d2 00BF     		.align	2
 183              	.L6:
 184 00d4 000048C3 		.word	-1018691584
 185              	.LBE2:
 186              		.cfi_endproc
 187              	.LFE32:
 189              		.section	.rodata._ZL10FontLookup,"a",%progbits
 190              		.align	2
 193              	_ZL10FontLookup:
 194 0000 00       		.byte	0
 195 0001 00       		.byte	0
 196 0002 00       		.byte	0
 197 0003 00       		.byte	0
 198 0004 00       		.byte	0
 199 0005 00       		.byte	0
 200 0006 00       		.byte	0
 201 0007 2F       		.byte	47
 202 0008 00       		.byte	0
 203 0009 00       		.byte	0
 204 000a 00       		.byte	0
 205 000b 07       		.byte	7
 206 000c 00       		.byte	0
 207 000d 07       		.byte	7
 208 000e 00       		.byte	0
 209 000f 14       		.byte	20
 210 0010 7F       		.byte	127
 211 0011 14       		.byte	20
 212 0012 7F       		.byte	127
 213 0013 14       		.byte	20
 214 0014 24       		.byte	36
 215 0015 2A       		.byte	42
 216 0016 7F       		.byte	127
 217 0017 2A       		.byte	42
 218 0018 12       		.byte	18
 219 0019 C4       		.byte	-60
 220 001a C8       		.byte	-56
 221 001b 10       		.byte	16
 222 001c 26       		.byte	38
 223 001d 46       		.byte	70
 224 001e 36       		.byte	54
 225 001f 49       		.byte	73
 226 0020 55       		.byte	85
 227 0021 22       		.byte	34
 228 0022 50       		.byte	80
 229 0023 00       		.byte	0
 230 0024 05       		.byte	5
 231 0025 03       		.byte	3
 232 0026 00       		.byte	0
 233 0027 00       		.byte	0
 234 0028 00       		.byte	0
 235 0029 1C       		.byte	28
 236 002a 22       		.byte	34
 237 002b 41       		.byte	65
 238 002c 00       		.byte	0
 239 002d 00       		.byte	0
 240 002e 41       		.byte	65
 241 002f 22       		.byte	34
 242 0030 1C       		.byte	28
 243 0031 00       		.byte	0
 244 0032 14       		.byte	20
 245 0033 08       		.byte	8
 246 0034 3E       		.byte	62
 247 0035 08       		.byte	8
 248 0036 14       		.byte	20
 249 0037 08       		.byte	8
 250 0038 08       		.byte	8
 251 0039 3E       		.byte	62
 252 003a 08       		.byte	8
 253 003b 08       		.byte	8
 254 003c 00       		.byte	0
 255 003d 00       		.byte	0
 256 003e 50       		.byte	80
 257 003f 30       		.byte	48
 258 0040 00       		.byte	0
 259 0041 10       		.byte	16
 260 0042 10       		.byte	16
 261 0043 10       		.byte	16
 262 0044 10       		.byte	16
 263 0045 10       		.byte	16
 264 0046 00       		.byte	0
 265 0047 60       		.byte	96
 266 0048 60       		.byte	96
 267 0049 00       		.byte	0
 268 004a 00       		.byte	0
 269 004b 20       		.byte	32
 270 004c 10       		.byte	16
 271 004d 08       		.byte	8
 272 004e 04       		.byte	4
 273 004f 02       		.byte	2
 274 0050 3E       		.byte	62
 275 0051 51       		.byte	81
 276 0052 49       		.byte	73
 277 0053 45       		.byte	69
 278 0054 3E       		.byte	62
 279 0055 00       		.byte	0
 280 0056 42       		.byte	66
 281 0057 7F       		.byte	127
 282 0058 40       		.byte	64
 283 0059 00       		.byte	0
 284 005a 42       		.byte	66
 285 005b 61       		.byte	97
 286 005c 51       		.byte	81
 287 005d 49       		.byte	73
 288 005e 46       		.byte	70
 289 005f 21       		.byte	33
 290 0060 41       		.byte	65
 291 0061 45       		.byte	69
 292 0062 4B       		.byte	75
 293 0063 31       		.byte	49
 294 0064 18       		.byte	24
 295 0065 14       		.byte	20
 296 0066 12       		.byte	18
 297 0067 7F       		.byte	127
 298 0068 10       		.byte	16
 299 0069 27       		.byte	39
 300 006a 45       		.byte	69
 301 006b 45       		.byte	69
 302 006c 45       		.byte	69
 303 006d 39       		.byte	57
 304 006e 3C       		.byte	60
 305 006f 4A       		.byte	74
 306 0070 49       		.byte	73
 307 0071 49       		.byte	73
 308 0072 30       		.byte	48
 309 0073 01       		.byte	1
 310 0074 71       		.byte	113
 311 0075 09       		.byte	9
 312 0076 05       		.byte	5
 313 0077 03       		.byte	3
 314 0078 36       		.byte	54
 315 0079 49       		.byte	73
 316 007a 49       		.byte	73
 317 007b 49       		.byte	73
 318 007c 36       		.byte	54
 319 007d 06       		.byte	6
 320 007e 49       		.byte	73
 321 007f 49       		.byte	73
 322 0080 29       		.byte	41
 323 0081 1E       		.byte	30
 324 0082 00       		.byte	0
 325 0083 36       		.byte	54
 326 0084 36       		.byte	54
 327 0085 00       		.byte	0
 328 0086 00       		.byte	0
 329 0087 00       		.byte	0
 330 0088 56       		.byte	86
 331 0089 36       		.byte	54
 332 008a 00       		.byte	0
 333 008b 00       		.byte	0
 334 008c 08       		.byte	8
 335 008d 14       		.byte	20
 336 008e 22       		.byte	34
 337 008f 41       		.byte	65
 338 0090 00       		.byte	0
 339 0091 14       		.byte	20
 340 0092 14       		.byte	20
 341 0093 14       		.byte	20
 342 0094 14       		.byte	20
 343 0095 14       		.byte	20
 344 0096 00       		.byte	0
 345 0097 41       		.byte	65
 346 0098 22       		.byte	34
 347 0099 14       		.byte	20
 348 009a 08       		.byte	8
 349 009b 02       		.byte	2
 350 009c 01       		.byte	1
 351 009d 51       		.byte	81
 352 009e 09       		.byte	9
 353 009f 06       		.byte	6
 354 00a0 32       		.byte	50
 355 00a1 49       		.byte	73
 356 00a2 59       		.byte	89
 357 00a3 51       		.byte	81
 358 00a4 3E       		.byte	62
 359 00a5 7E       		.byte	126
 360 00a6 11       		.byte	17
 361 00a7 11       		.byte	17
 362 00a8 11       		.byte	17
 363 00a9 7E       		.byte	126
 364 00aa 7F       		.byte	127
 365 00ab 49       		.byte	73
 366 00ac 49       		.byte	73
 367 00ad 49       		.byte	73
 368 00ae 36       		.byte	54
 369 00af 3E       		.byte	62
 370 00b0 41       		.byte	65
 371 00b1 41       		.byte	65
 372 00b2 41       		.byte	65
 373 00b3 22       		.byte	34
 374 00b4 7F       		.byte	127
 375 00b5 41       		.byte	65
 376 00b6 41       		.byte	65
 377 00b7 22       		.byte	34
 378 00b8 1C       		.byte	28
 379 00b9 7F       		.byte	127
 380 00ba 49       		.byte	73
 381 00bb 49       		.byte	73
 382 00bc 49       		.byte	73
 383 00bd 41       		.byte	65
 384 00be 7F       		.byte	127
 385 00bf 09       		.byte	9
 386 00c0 09       		.byte	9
 387 00c1 09       		.byte	9
 388 00c2 01       		.byte	1
 389 00c3 3E       		.byte	62
 390 00c4 41       		.byte	65
 391 00c5 49       		.byte	73
 392 00c6 49       		.byte	73
 393 00c7 7A       		.byte	122
 394 00c8 7F       		.byte	127
 395 00c9 08       		.byte	8
 396 00ca 08       		.byte	8
 397 00cb 08       		.byte	8
 398 00cc 7F       		.byte	127
 399 00cd 00       		.byte	0
 400 00ce 41       		.byte	65
 401 00cf 7F       		.byte	127
 402 00d0 41       		.byte	65
 403 00d1 00       		.byte	0
 404 00d2 20       		.byte	32
 405 00d3 40       		.byte	64
 406 00d4 41       		.byte	65
 407 00d5 3F       		.byte	63
 408 00d6 01       		.byte	1
 409 00d7 7F       		.byte	127
 410 00d8 08       		.byte	8
 411 00d9 14       		.byte	20
 412 00da 22       		.byte	34
 413 00db 41       		.byte	65
 414 00dc 7F       		.byte	127
 415 00dd 40       		.byte	64
 416 00de 40       		.byte	64
 417 00df 40       		.byte	64
 418 00e0 40       		.byte	64
 419 00e1 7F       		.byte	127
 420 00e2 02       		.byte	2
 421 00e3 0C       		.byte	12
 422 00e4 02       		.byte	2
 423 00e5 7F       		.byte	127
 424 00e6 7F       		.byte	127
 425 00e7 04       		.byte	4
 426 00e8 08       		.byte	8
 427 00e9 10       		.byte	16
 428 00ea 7F       		.byte	127
 429 00eb 3E       		.byte	62
 430 00ec 41       		.byte	65
 431 00ed 41       		.byte	65
 432 00ee 41       		.byte	65
 433 00ef 3E       		.byte	62
 434 00f0 7F       		.byte	127
 435 00f1 09       		.byte	9
 436 00f2 09       		.byte	9
 437 00f3 09       		.byte	9
 438 00f4 06       		.byte	6
 439 00f5 3E       		.byte	62
 440 00f6 41       		.byte	65
 441 00f7 51       		.byte	81
 442 00f8 21       		.byte	33
 443 00f9 5E       		.byte	94
 444 00fa 7F       		.byte	127
 445 00fb 09       		.byte	9
 446 00fc 19       		.byte	25
 447 00fd 29       		.byte	41
 448 00fe 46       		.byte	70
 449 00ff 46       		.byte	70
 450 0100 49       		.byte	73
 451 0101 49       		.byte	73
 452 0102 49       		.byte	73
 453 0103 31       		.byte	49
 454 0104 01       		.byte	1
 455 0105 01       		.byte	1
 456 0106 7F       		.byte	127
 457 0107 01       		.byte	1
 458 0108 01       		.byte	1
 459 0109 3F       		.byte	63
 460 010a 40       		.byte	64
 461 010b 40       		.byte	64
 462 010c 40       		.byte	64
 463 010d 3F       		.byte	63
 464 010e 1F       		.byte	31
 465 010f 20       		.byte	32
 466 0110 40       		.byte	64
 467 0111 20       		.byte	32
 468 0112 1F       		.byte	31
 469 0113 3F       		.byte	63
 470 0114 40       		.byte	64
 471 0115 38       		.byte	56
 472 0116 40       		.byte	64
 473 0117 3F       		.byte	63
 474 0118 63       		.byte	99
 475 0119 14       		.byte	20
 476 011a 08       		.byte	8
 477 011b 14       		.byte	20
 478 011c 63       		.byte	99
 479 011d 07       		.byte	7
 480 011e 08       		.byte	8
 481 011f 70       		.byte	112
 482 0120 08       		.byte	8
 483 0121 07       		.byte	7
 484 0122 61       		.byte	97
 485 0123 51       		.byte	81
 486 0124 49       		.byte	73
 487 0125 45       		.byte	69
 488 0126 43       		.byte	67
 489 0127 00       		.byte	0
 490 0128 7F       		.byte	127
 491 0129 41       		.byte	65
 492 012a 41       		.byte	65
 493 012b 00       		.byte	0
 494 012c 55       		.byte	85
 495 012d 2A       		.byte	42
 496 012e 55       		.byte	85
 497 012f 2A       		.byte	42
 498 0130 55       		.byte	85
 499 0131 00       		.byte	0
 500 0132 41       		.byte	65
 501 0133 41       		.byte	65
 502 0134 7F       		.byte	127
 503 0135 00       		.byte	0
 504 0136 04       		.byte	4
 505 0137 02       		.byte	2
 506 0138 01       		.byte	1
 507 0139 02       		.byte	2
 508 013a 04       		.byte	4
 509 013b 40       		.byte	64
 510 013c 40       		.byte	64
 511 013d 40       		.byte	64
 512 013e 40       		.byte	64
 513 013f 40       		.byte	64
 514 0140 00       		.byte	0
 515 0141 01       		.byte	1
 516 0142 02       		.byte	2
 517 0143 04       		.byte	4
 518 0144 00       		.byte	0
 519 0145 20       		.byte	32
 520 0146 54       		.byte	84
 521 0147 54       		.byte	84
 522 0148 54       		.byte	84
 523 0149 78       		.byte	120
 524 014a 7F       		.byte	127
 525 014b 48       		.byte	72
 526 014c 44       		.byte	68
 527 014d 44       		.byte	68
 528 014e 38       		.byte	56
 529 014f 38       		.byte	56
 530 0150 44       		.byte	68
 531 0151 44       		.byte	68
 532 0152 44       		.byte	68
 533 0153 20       		.byte	32
 534 0154 38       		.byte	56
 535 0155 44       		.byte	68
 536 0156 44       		.byte	68
 537 0157 48       		.byte	72
 538 0158 7F       		.byte	127
 539 0159 38       		.byte	56
 540 015a 54       		.byte	84
 541 015b 54       		.byte	84
 542 015c 54       		.byte	84
 543 015d 18       		.byte	24
 544 015e 08       		.byte	8
 545 015f 7E       		.byte	126
 546 0160 09       		.byte	9
 547 0161 01       		.byte	1
 548 0162 02       		.byte	2
 549 0163 0C       		.byte	12
 550 0164 52       		.byte	82
 551 0165 52       		.byte	82
 552 0166 52       		.byte	82
 553 0167 3E       		.byte	62
 554 0168 7F       		.byte	127
 555 0169 08       		.byte	8
 556 016a 04       		.byte	4
 557 016b 04       		.byte	4
 558 016c 78       		.byte	120
 559 016d 00       		.byte	0
 560 016e 44       		.byte	68
 561 016f 7D       		.byte	125
 562 0170 40       		.byte	64
 563 0171 00       		.byte	0
 564 0172 20       		.byte	32
 565 0173 40       		.byte	64
 566 0174 44       		.byte	68
 567 0175 3D       		.byte	61
 568 0176 00       		.byte	0
 569 0177 7F       		.byte	127
 570 0178 10       		.byte	16
 571 0179 28       		.byte	40
 572 017a 44       		.byte	68
 573 017b 00       		.byte	0
 574 017c 00       		.byte	0
 575 017d 41       		.byte	65
 576 017e 7F       		.byte	127
 577 017f 40       		.byte	64
 578 0180 00       		.byte	0
 579 0181 7C       		.byte	124
 580 0182 04       		.byte	4
 581 0183 18       		.byte	24
 582 0184 04       		.byte	4
 583 0185 78       		.byte	120
 584 0186 7C       		.byte	124
 585 0187 08       		.byte	8
 586 0188 04       		.byte	4
 587 0189 04       		.byte	4
 588 018a 78       		.byte	120
 589 018b 38       		.byte	56
 590 018c 44       		.byte	68
 591 018d 44       		.byte	68
 592 018e 44       		.byte	68
 593 018f 38       		.byte	56
 594 0190 7C       		.byte	124
 595 0191 14       		.byte	20
 596 0192 14       		.byte	20
 597 0193 14       		.byte	20
 598 0194 08       		.byte	8
 599 0195 08       		.byte	8
 600 0196 14       		.byte	20
 601 0197 14       		.byte	20
 602 0198 18       		.byte	24
 603 0199 7C       		.byte	124
 604 019a 7C       		.byte	124
 605 019b 08       		.byte	8
 606 019c 04       		.byte	4
 607 019d 04       		.byte	4
 608 019e 08       		.byte	8
 609 019f 48       		.byte	72
 610 01a0 54       		.byte	84
 611 01a1 54       		.byte	84
 612 01a2 54       		.byte	84
 613 01a3 20       		.byte	32
 614 01a4 04       		.byte	4
 615 01a5 3F       		.byte	63
 616 01a6 44       		.byte	68
 617 01a7 40       		.byte	64
 618 01a8 20       		.byte	32
 619 01a9 3C       		.byte	60
 620 01aa 40       		.byte	64
 621 01ab 40       		.byte	64
 622 01ac 20       		.byte	32
 623 01ad 7C       		.byte	124
 624 01ae 1C       		.byte	28
 625 01af 20       		.byte	32
 626 01b0 40       		.byte	64
 627 01b1 20       		.byte	32
 628 01b2 1C       		.byte	28
 629 01b3 3C       		.byte	60
 630 01b4 40       		.byte	64
 631 01b5 30       		.byte	48
 632 01b6 40       		.byte	64
 633 01b7 3C       		.byte	60
 634 01b8 44       		.byte	68
 635 01b9 28       		.byte	40
 636 01ba 10       		.byte	16
 637 01bb 28       		.byte	40
 638 01bc 44       		.byte	68
 639 01bd 0C       		.byte	12
 640 01be 50       		.byte	80
 641 01bf 50       		.byte	80
 642 01c0 50       		.byte	80
 643 01c1 3C       		.byte	60
 644 01c2 44       		.byte	68
 645 01c3 64       		.byte	100
 646 01c4 54       		.byte	84
 647 01c5 4C       		.byte	76
 648 01c6 44       		.byte	68
 649 01c7 00       		.text
 650              	.Letext0:
 651              		.file 2 "/home/jachu/elektronika/STM32/gcc-arm-none-eabi-4_6-2012q4/bin/../lib/gcc/arm-none-eabi/4
 652              		.file 3 "../src/motor.h"
 653              		.file 4 "../src/lcd.h"
 654              		.file 5 "/home/jachu/elektronika/STM32/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/CMSIS/CM3/CoreSupp
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/ccDHwngo.s:19     .text._Z5delayi:00000000 $t
     /tmp/ccDHwngo.s:24     .text._Z5delayi:00000000 _Z5delayi
     /tmp/ccDHwngo.s:69     .rodata:00000000 $d
     /tmp/ccDHwngo.s:70     .rodata:00000000 .LC0
     /tmp/ccDHwngo.s:73     .rodata:0000000c .LC1
     /tmp/ccDHwngo.s:76     .text.main:00000000 $t
     /tmp/ccDHwngo.s:81     .text.main:00000000 main
     /tmp/ccDHwngo.s:184    .text.main:000000d4 $d
     /tmp/ccDHwngo.s:190    .rodata._ZL10FontLookup:00000000 $d
     /tmp/ccDHwngo.s:193    .rodata._ZL10FontLookup:00000000 _ZL10FontLookup
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_Z7sysInitv
_Z11motorSetVelf5Motor
_Z11motorRunVel5Motor
_Z9ledTogglet
_Z10sysDelayMsj
_Z8LcdClearv
_Z13LcdGotoXYFonthh
_Z6LcdStr11LcdFontSizePKh
_Z12motorReadEnc5Motor
_Z5uitoamPch
motor_width
